name: CI/CD

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Build .NET application
        run: dotnet build --configuration Release

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  test:
    runs-on: self-hosted
    needs: analyze
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.100

      - name: Restore dependencies
        run: dotnet restore

      - name: Test
        run: dotnet test

  sonarcloud:
    runs-on: windows-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud scanner
        uses: actions/cache@v2
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          Invoke-WebRequest -Uri https://github.com/SonarSource/sonar-scanner-msbuild/releases/download/5.2.1.31210/sonar-scanner-msbuild-5.2.1.31210-netcoreapp3.0.zip -OutFile sonar-scanner-msbuild.zip
          Expand-Archive -Path sonar-scanner-msbuild.zip -DestinationPath .sonar/scanner -Force
          Remove-Item sonar-scanner-msbuild.zip

      - name: Install dotnet-sonarscanner
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: Build and analyze with SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin /k:'hamzabely2_ItemMicroService' /o:'hamzabely2' /d:sonar.token='${{ secrets.SONAR_TOKEN }}' /d:sonar.host.url='https://sonarcloud.io'
          dotnet build
          dotnet sonarscanner end /d:sonar.token='${{ secrets.SONAR_TOKEN }}'

  build-and-deploy:
    runs-on: self-hosted
    needs: [test,sonarcloud]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    
    steps:
        - name: Pull Data from main branch
          uses: actions/checkout@v2
  
        - name: Build Docker images
          run: |
            sudo docker-compose -f docker-compose.yml build 
            sudo docker save itemMicroService > itemMicroService.tar 
        - name: Transfer Docker Image to Server
          run: |
            sshpass -p ${{ secrets.PASSWORD }} scp -o StrictHostKeyChecking=no itemMicroService.tar ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/root/
          env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        - name: Load Docker Image on Server
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            password: ${{ secrets.PASSWORD }}
            port: 22
            script: |
              ./resetimages.sh
              
        - name: Remove Docker Images
          run: sudo docker image prune -a -f
