name: CI/CD

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.100

      - name: Restore dependencies
        run: dotnet restore

      - name: Test
        run: dotnet test

  sonarcloud:
    runs-on: windows-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud scanner
        uses: actions/cache@v2
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          Invoke-WebRequest -Uri https://github.com/SonarSource/sonar-scanner-msbuild/releases/download/5.2.1.31210/sonar-scanner-msbuild-5.2.1.31210-netcoreapp3.0.zip -OutFile sonar-scanner-msbuild.zip
          Expand-Archive -Path sonar-scanner-msbuild.zip -DestinationPath .sonar/scanner -Force
          Remove-Item sonar-scanner-msbuild.zip

      - name: Install dotnet-sonarscanner
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: Build and analyze with SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin /k:'hamzabely2_ItemMicroService' /o:'hamzabely2' /d:sonar.token='${{ secrets.SONAR_TOKEN }}' /d:sonar.host.url='https://sonarcloud.io'
          dotnet build
          dotnet sonarscanner end /d:sonar.token='${{ secrets.SONAR_TOKEN }}'
  build-Image:
    strategy:
      matrix:
        component: ["frontend", "backend"]
    runs-on: self-hosted
    permissions:
      packages: write
      contents: read
    needs: [test]
    
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.100

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Build Docker image
        run: |
          sudo docker-compose -f docker-compose.yaml build
          sudo docker save itemmicroservice-app > itemmicroservice.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v2
        with:
          name: itemmicroservice-artifact
          path: itemmicroservice.tar
